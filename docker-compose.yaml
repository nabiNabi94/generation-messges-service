version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - my-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.0
    networks:
      - my-network
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    expose:
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ZK_SERVER: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      MIN_INSYNC_REPLICAS: 2


      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPIC: "vn-project-in:1:3"
    links:
      - zookeeper
  generator:
    image: generationapp
    build:
      context: https://github.com/nabiNabi94/generation-messges-service.git
      dockerfile: Dockerfile
    container_name: generator
    networks:
      - my-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8000:8080"
    restart: always
    depends_on:
      - db
      - kafka
    links:
      - db
      - kafka:kafka
  consumer:
    image: conasumerapp
    build:
        context: github.com/nabiNabi94/consumer-message-service.git
        dockerfile: Dockerfile
    container_name: consumer
    networks:
      - my-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "9081:9080"
    restart: always
    depends_on:
      - db
      - kafka
    links:
      - db
      - kafka:kafka
  db:
      image: postgres:12
      container_name: db
      networks:
        - my-network
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=kafka
        - PGDATA=/var/lib/postgresql/data/pgdata
      ports:
        - "5000:5432"
      volumes:
        - pgdata:/var/lib/postgresql/data
      restart: always
volumes:
      pgdata:
networks:
  my-network: {}